<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>sls</groupId>
	<artifactId>transferencia-eletronica</artifactId>
	<version>1.0</version>
	<packaging>pom</packaging>
	<modules>
		<module>transferencia-eletronica-api</module>
		<module>transferencia-eletronica-core</module>
		<module>transferencia-eletronica-extranet-ui</module>
		<module>transferencia-eletronica-manager</module>
	</modules>


	<properties>
		<project.build.sourceEncoding>UTF-8	</project.build.sourceEncoding>
		<!-- Essa propriedade serve para desligar a execucao dos testes de integracao 
			nas builds normais. Veja o profile "com-testes-integracao" para mais detalhes -->
		<surefire.exclude.testes.integracao>**/*IntegrationTest.java</surefire.exclude.testes.integracao>

		<liquibase.db.driver>oracle.jdbc.OracleDriver</liquibase.db.driver>
		<liquibase.default.schema.name>TEMPLATE_WEB</liquibase.default.schema.name>

		<spring.version>4.2.2.RELEASE</spring.version>
		<hibernate.version>4.2.19.Final</hibernate.version>
		<hibernate.validator.version>5.2.4.Final</hibernate.validator.version>
		<slf4j.version>1.7.21</slf4j.version>
		<spring.data.version>1.10.1.RELEASE</spring.data.version>
		<liquibase.version>3.4.0</liquibase.version>
		<ojdbc6.version>11.2.0.4</ojdbc6.version>

		<junit.version>4.12</junit.version>
		<selenium.version>2.46.0</selenium.version>
		<mockito.version>1.10.19</mockito.version>
		<h2.version>1.4.192</h2.version>
		<jetty.plugin.version>9.2.14.v20151106</jetty.plugin.version>

		<!--set this to your docker acct name -->
		<docker.image.prefix>${project.artifactId}</docker.image.prefix>

		<!--Set to name of project -->
		<docker.image.name>${project.artifactId}-docker</docker.image.name>

	</properties>

	<!-- PROFILES -->
	<profiles>
		<profile>
			<id>desenvolvimento</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<build.profile.id>desenvolvimento</build.profile.id>
			</properties>
		</profile>
		<profile>
			<id>homologacao</id>
			<properties>
				<build.profile.id>homologacao</build.profile.id>
			</properties>
		</profile>
		<profile>
			<id>producao</id>
			<properties>
				<build.profile.id>producao</build.profile.id>
			</properties>
		</profile>
		<!-- <profile> <id>local</id> <properties> <liquibase.db.conn.string>jdbc:oracle:thin:@localhost:1522:xe</liquibase.db.conn.string> 
			<liquibase.db.user>ATUALIZADOR</liquibase.db.user> <liquibase.db.password>123456</liquibase.db.password> 
			</properties> </profile> -->
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<excludes>
						<exclude>${surefire.exclude.testes.integracao}</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.1.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<inherited>false</inherited>
				<executions>
					<execution>
						<id>preparando-novo-projeto</id>
						<phase>post-clean</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<tasks>
						<ant antfile="build.xml" />
					</tasks>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.20.0</version>
				<inherited>false</inherited>

				<configuration>

					<!--<dockerHost>http://127.0.0.1:2375</dockerHost> -->
					<dockerHost>unix:///var/run/docker.sock</dockerHost>

					<verbose>true</verbose>
					<images>
						<image>
							<name>${docker.image.prefix}/${docker.image.name}</name>
							<build>
								<dockerFileDir>${project.basedir}</dockerFileDir>

								copies artficact to docker build dir in target
								<assembly>
									<descriptorRef></descriptorRef>
									<targetDir>/target</targetDir>
								</assembly>
								<tags>
									<tag>latest</tag>
									<tag>${project.version}</tag>
								</tags>
							</build>
							<run>
								<ports>
									<port>8080:8080</port>
								</ports>
								<links>
									<link>mysqldb:mysqldb</link>
								</links>
								<env>
									<SPRING_PROFILES_ACTIVE>mysql</SPRING_PROFILES_ACTIVE>
								</env>
								<dependsOn>
									<container>mysql</container>
								</dependsOn>
							</run>
						</image>
						<!--mysql container -->
						<image>
							<name>mysql</name>
							<alias>mysqldb</alias>
							
							<build>
								<dockerFile>${project.basedir}/Dockerfile.MySQL</dockerFile>
								
								<assembly>
									<descriptorRef></descriptorRef>
									<targetDir>/target</targetDir>
								</assembly>
								<tags>
									<tag>latest</tag>
									<tag>${project.version}</tag>
								</tags>
							</build>

							<run>
								<!--expose port for dn -->
								<ports>
									<port>3306:3306</port>
								</ports>
								<!--set env prams for mysql image -->
								<env>
									<MYSQL_DATABASE>transferenciaeletronica</MYSQL_DATABASE>
									<MYSQL_ROOT_PASSWORD>root</MYSQL_ROOT_PASSWORD>
								</env>
								<!--wait for db to start -->
								<wait>
									<time>70000</time>
								</wait>
							</run>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>